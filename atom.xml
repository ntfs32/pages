<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://gois.top</id>
    <title>Shaddock</title>
    <updated>2019-07-30T09:26:38.215Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://gois.top"/>
    <link rel="self" href="https://gois.top/atom.xml"/>
    <subtitle>温故而知新</subtitle>
    <logo>https://gois.top/images/avatar.png</logo>
    <icon>https://gois.top/favicon.ico</icon>
    <rights>All rights reserved 2019, Shaddock</rights>
    <entry>
        <title type="html"><![CDATA[Postgres常用操作]]></title>
        <id>https://gois.top/post/postgres-chang-yong-cao-zuo</id>
        <link href="https://gois.top/post/postgres-chang-yong-cao-zuo">
        </link>
        <updated>2019-07-30T09:24:37.000Z</updated>
        <content type="html"><![CDATA[<h2 id="查看库所有表大小">查看库所有表大小</h2>
<pre><code class="language-sql">--数据库中单个表的大小（不包含索引）
select pg_size_pretty(pg_relation_size('表名'));

--查出所有表（包含索引）并排序
SELECT table_schema || '.' || table_name AS table_full_name, pg_size_pretty(pg_total_relation_size('&quot;' || table_schema || '&quot;.&quot;' || table_name || '&quot;')) AS size
FROM information_schema.tables
ORDER BY
pg_total_relation_size('&quot;' || table_schema || '&quot;.&quot;' || table_name || '&quot;') DESC limit 20

--查出表大小按大小排序并分离data与index
SELECT
table_name,
pg_size_pretty(table_size) AS table_size,
pg_size_pretty(indexes_size) AS indexes_size,
pg_size_pretty(total_size) AS total_size
FROM (
SELECT
table_name,
pg_table_size(table_name) AS table_size,
pg_indexes_size(table_name) AS indexes_size,
pg_total_relation_size(table_name) AS total_size
FROM (
SELECT ('&quot;' || table_schema || '&quot;.&quot;' || table_name || '&quot;') AS table_name
FROM information_schema.tables
) AS all_tables
ORDER BY total_size DESC
) AS pretty_sizes
</code></pre>
<h2 id="设置关闭postgres默认的分页查询">设置关闭postgres默认的分页查询</h2>
<pre><code>\set pager off
</code></pre>
<h2 id="唯一key重复数据查询">唯一key重复数据查询</h2>
<pre><code>select * from health_report where exists(select null from (select client_id,ukey from health_report group by client_id,ukey having count(*) &gt; 1)tbl_temp where (tbl_temp.client_id=health_report.client_id and tbl_temp.ukey=health_report.ukey) or (tbl_temp.client_id is null and health_report.client_id is null) or (tbl_temp.ukey is null and health_report.ukey is null)) ;
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Hello Gridea]]></title>
        <id>https://gois.top/post/hello-gridea</id>
        <link href="https://gois.top/post/hello-gridea">
        </link>
        <updated>2018-12-11T16:00:00.000Z</updated>
        <content type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
]]></content>
    </entry>
</feed>